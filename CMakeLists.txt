cmake_minimum_required(VERSION 3.13)
project(SGE VERSION 1.0)
SET(CMAKE_INSTALL_RPATH "\$ORIGIN/../../lib/lx-amd64")
execute_process(COMMAND pkgconf --modversion systemd OUTPUT_VARIABLE SYSTEMD_VERSION)
add_compile_definitions(
	SGE_ARCH_STRING="lx-amd64"
	LINUX
	LINUXAMD64
	GETHOSTBYNAME_R6
	GETHOSTBYADDR_R8
	TARGET_64BIT
	SGE_PQS_API
	SPOOLING_dynamic
	SECURE
	HAVE_HWLOC=1
	NO_JNI
	COMPILE_DC
	__SGE_COMPILE_WITH_GETTEXT__
	__SGE_NO_USERMAPPING__
)
add_compile_options(
	-fPIC
	-O2
	-Wstrict-prototypes
	-I/usr/include/tirpc
)
add_link_options(
	-ltirpc
	-lm
	-pthread
	-rdynamic
)
if (SYSTEMD) 
	if (SYSTEMD_VERSION VERSION_GREATER_EQUAL "222")
		add_compile_options( -DHAVE_SYSTEMD=1 )
	else()
		message(FATAL_ERROR "Either your system doesn't have systemd, or its system version is too low, CMake will exit." )
	endif()
endif()
add_subdirectory(source)
install(
	PROGRAMS
		source/dist/install_execd
		source/dist/install_qmaster
		source/dist/inst_sge
	DESTINATION .
)
install(
	DIRECTORY
		doc/man
		source/dist/examples
		source/dist/hadoop
		source/dist/mpi
		source/dist/pvm
		source/dist/qmon
		source/dist/util
	DESTINATION .
	USE_SOURCE_PERMISSIONS
)
install(
	TARGETS
		qacct
		qalter
		qconf
		qdel
		qevent
		qhost
#		qmake
		qmod
		qmon
		qping
		qquota
		qrdel
		qrstat
		qrsub
		qsh
		qstat
		qsub
		qtcsh
		sge_coshepherd
		sge_execd
		sge_qmaster
		sge_shadowd
		sge_shepherd
		sgepasswd
	DESTINATION bin/lx-amd64
)
install(
	TARGETS
		adminrun
		checkprog
		checkuser
		filestat
		gethostbyaddr
		gethostbyname
		gethostname
		getservbyname
		infotext
		loadcheck
		now
		qrsh_starter
		spooldefaults
		spoolinit
		testsuidroot
		uidgid
		authuser
	DESTINATION utilbin/lx-amd64
)
install(
	TARGETS
		spoolb
		spoolc
	DESTINATION lib/lx-amd64
)
install(
	CODE "execute_process(COMMAND \"./CMakePostInstall.sh\" ${CMAKE_INSTALL_PREFIX})"
)
